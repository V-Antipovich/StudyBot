# Generated by Django 4.1 on 2022-08-11 14:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_activated', models.BooleanField(db_index=True, default=True, verbose_name='Прошел активацию?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, verbose_name='Код страны')),
                ('russian_name', models.CharField(max_length=150, verbose_name='Название на русском')),
                ('english_name', models.CharField(max_length=150, verbose_name='Название на английском')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digital_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='Цифровой код')),
                ('short_name', models.CharField(max_length=3, verbose_name='Обозначение')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
            },
        ),
        migrations.CreateModel(
            name='CustomsHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_num', models.CharField(max_length=8, verbose_name='Номер отдела')),
                ('house_name', models.CharField(max_length=255, verbose_name='Название отдела')),
            ],
            options={
                'verbose_name': 'Таможенные отделы',
                'verbose_name_plural': 'Таможенные отделы',
            },
        ),
        migrations.CreateModel(
            name='DealType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, verbose_name='Код характера сделки')),
                ('deal_type', models.TextField(verbose_name='Характер сделки')),
            ],
            options={
                'verbose_name': 'Характер сделки',
                'verbose_name_plural': 'Классификатор характера сделки',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=50, verbose_name='Название документа')),
                ('date', models.DateField(verbose_name='Дата')),
                ('begin_date', models.DateField(verbose_name='Дата начала действия')),
                ('expire_date', models.DateField(verbose_name='Дата окончания действия')),
            ],
        ),
        migrations.CreateModel(
            name='Exporter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Почтовый индекс')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Город')),
                ('street_house', models.CharField(blank=True, max_length=100, null=True, verbose_name='Улица (и/или дом)')),
                ('house', models.CharField(blank=True, max_length=100, null=True, verbose_name='Дом')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Регион')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.country', verbose_name='id страны')),
            ],
            options={
                'verbose_name': 'Экспортер',
                'verbose_name_plural': 'Экспортеры',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marking', models.CharField(max_length=20, verbose_name='Артикул')),
                ('name', models.CharField(max_length=256, verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='GoodsMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100, verbose_name='Торговая марка')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=100, verbose_name='Производитель')),
            ],
        ),
        migrations.CreateModel(
            name='PresentCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, verbose_name='Код представления')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Представление документа',
                'verbose_name_plural': 'Представление документа',
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, verbose_name='Код таможенной процедуры')),
                ('name', models.CharField(max_length=255, verbose_name='Таможенная процедура')),
            ],
            options={
                'verbose_name': 'Вид таможенной процедуры',
                'verbose_name_plural': 'Классификатор видов таможенных процедур',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='TnVed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Номер группы')),
                ('subposition', models.CharField(max_length=255, verbose_name='Подсубпозиция')),
            ],
            options={
                'verbose_name': 'ТН ВЭД',
                'verbose_name_plural': 'ТН ВЭД',
            },
        ),
        migrations.CreateModel(
            name='TradeMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trademark', models.CharField(max_length=100, verbose_name='Товарный знак')),
            ],
        ),
        migrations.CreateModel(
            name='UploadGtd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Краткий комментарий')),
                ('document', models.FileField(upload_to='gtd/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.role', verbose_name='id роли')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='Importer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Почтовый индекс')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Город')),
                ('street_house', models.CharField(blank=True, max_length=100, null=True, verbose_name='Улица (и/или дом)')),
                ('house', models.CharField(blank=True, max_length=100, null=True, verbose_name='Дом')),
                ('inn', models.CharField(max_length=15, verbose_name='ИНН')),
                ('ogrn', models.CharField(max_length=20, verbose_name='ОГРН')),
                ('kpp', models.CharField(max_length=20, verbose_name='КПП')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.country', verbose_name='id страны')),
            ],
            options={
                'verbose_name': 'Импортер',
                'verbose_name_plural': 'Импортеры',
            },
        ),
        migrations.CreateModel(
            name='GtdMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gtdId', models.CharField(max_length=23, verbose_name='Номер гтд')),
                ('date', models.DateField(verbose_name='Дата')),
                ('order_num', models.CharField(max_length=7, verbose_name='Порядковый номер')),
                ('total_goods_number', models.IntegerField(verbose_name='Всего товаров')),
                ('total_cost', models.FloatField(verbose_name='Общая стоимость')),
                ('total_invoice_amount', models.FloatField(verbose_name='Общая стоимость по счету')),
                ('currency_rate', models.FloatField(verbose_name='Курс валюты')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.currency', verbose_name='id валюты')),
                ('customs_house', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.customshouse', verbose_name='id таможенного отделения')),
                ('deal_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.dealtype', verbose_name='id характера сделки')),
                ('exporter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.exporter', verbose_name='id Экспортера')),
                ('gtd_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.uploadgtd', verbose_name='id xml-документа гтд')),
                ('importer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.importer', verbose_name='id импортера')),
                ('trading_country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.country', verbose_name='id торгующей страны')),
            ],
            options={
                'verbose_name': 'Грузовая таможенная декларация',
                'verbose_name_plural': 'Грузовые таможенные декларации',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GtdGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер товарной группы')),
                ('gross_weight', models.FloatField(verbose_name='Масса брутто')),
                ('net_weight', models.FloatField(verbose_name='Масса нетто')),
                ('customs_cost', models.FloatField(verbose_name='Таможенная стоимость')),
                ('fee', models.FloatField(verbose_name='Сумма пошлины')),
                ('ndc', models.FloatField(verbose_name='Сумма НДС')),
                ('fee_percent', models.FloatField(verbose_name='Процентная ставка пошлины')),
                ('ndc_percent', models.FloatField(verbose_name='Процентная ставка НДС')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.country', verbose_name='id страны происхождения')),
                ('gtd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.gtdmain', verbose_name='id ГТД')),
                ('prev_procedure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.procedure', verbose_name='id предыдущей таможенной процедуры')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.procedure', verbose_name='id завляемой таможенной процедуры')),
                ('tn_ved', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.tnved', verbose_name='id кода товарной группы ТН ВЭД')),
            ],
            options={
                'verbose_name': 'Группа товаров в ГТД',
                'verbose_name_plural': 'Группы товаров в ГТД',
            },
        ),
        migrations.CreateModel(
            name='GtdGood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('good_num', models.IntegerField(verbose_name='Номер товара в группе')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.good', verbose_name='id товара')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.gtdgroup', verbose_name='id группы товаров')),
                ('gtd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.gtdmain', verbose_name='id ГТД')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.manufacturer', verbose_name='id производителя')),
            ],
            options={
                'verbose_name': 'Товар в ГТД',
                'verbose_name_plural': 'Товары в ГТД',
            },
        ),
        migrations.CreateModel(
            name='GtdDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.document', verbose_name='id документа')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.gtdgroup', verbose_name='id группы товаров')),
                ('gtd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.gtdmain', verbose_name='id ГТД')),
                ('present_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.presentcode', verbose_name='id признака представления')),
            ],
        ),
        migrations.AddField(
            model_name='good',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.goodsmark', verbose_name='id торговой марки'),
        ),
        migrations.AddField(
            model_name='good',
            name='trademark',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='main.trademark', verbose_name='id товарного знака'),
        ),
    ]
